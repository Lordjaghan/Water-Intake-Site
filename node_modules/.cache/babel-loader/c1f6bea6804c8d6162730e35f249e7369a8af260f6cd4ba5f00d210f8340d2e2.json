{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\water-intake\\\\src\\\\components\\\\files\\\\AddIntake.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddIntake() {\n  _s();\n  const [waterIntake, setWaterIntake] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  //   const loggedInUser = \"user123\"; // Replace with actual user logic\n\n  //   useEffect(() => {\n  //     checkExistingEntry();\n  //   }, []);\n\n  //   const checkExistingEntry = () => {\n  //     const storedData = JSON.parse(localStorage.getItem(\"waterIntakeData\")) || {};\n  //     const today = new Date().toISOString().split(\"T\")[0];\n\n  //     if (storedData.date === today) {\n  //       setError(\"You have already logged your water intake for today.\");\n  //     }\n  //   };\n\n  const handleAddIntake = () => {\n    if (!waterIntake) {\n      setError(\"Please enter a water intake amount.\");\n      return;\n    }\n    const storedData = JSON.parse(localStorage.getItem(\"waterIntakeData\")) || {};\n    const today = new Date().toISOString().split(\"T\")[0];\n    if (storedData.date === today) {\n      setError(\"You have already logged your water intake for today.\");\n      return;\n    }\n    storedData = {\n      date: today,\n      intake: waterIntake\n    };\n    localStorage.setItem(\"waterIntakeData\", JSON.stringify(storedData));\n    setSuccess(\"Water intake logged successfully!\");\n    setError(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Water Intake Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: waterIntake,\n      onChange: e => setWaterIntake(e.target.value),\n      placeholder: \"Enter water intake (ml)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddIntake,\n      children: \"Add Intake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(AddIntake, \"i1VnNFElZjOm1ShKmX5egxQUmuU=\");\n_c = AddIntake;\n;\nexport default AddIntake;\nvar _c;\n$RefreshReg$(_c, \"AddIntake\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","AddIntake","_s","waterIntake","setWaterIntake","error","setError","success","setSuccess","handleAddIntake","storedData","JSON","parse","localStorage","getItem","today","Date","toISOString","split","date","intake","setItem","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/React/water-intake/src/components/files/AddIntake.js"],"sourcesContent":["import { useState,  } from \"react\";\r\n\r\nfunction AddIntake() {\r\n  const [waterIntake, setWaterIntake] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n//   const loggedInUser = \"user123\"; // Replace with actual user logic\r\n\r\n//   useEffect(() => {\r\n//     checkExistingEntry();\r\n//   }, []);\r\n\r\n//   const checkExistingEntry = () => {\r\n//     const storedData = JSON.parse(localStorage.getItem(\"waterIntakeData\")) || {};\r\n//     const today = new Date().toISOString().split(\"T\")[0];\r\n\r\n//     if (storedData.date === today) {\r\n//       setError(\"You have already logged your water intake for today.\");\r\n//     }\r\n//   };\r\n\r\n  const handleAddIntake = () => {\r\n    if (!waterIntake) {\r\n      setError(\"Please enter a water intake amount.\");\r\n      return;\r\n    }\r\n\r\n    const storedData = JSON.parse(localStorage.getItem(\"waterIntakeData\")) || {};\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n\r\n    if (storedData.date === today) {\r\n      setError(\"You have already logged your water intake for today.\");\r\n      return;\r\n    }\r\n\r\n    storedData= { date: today, intake: waterIntake };\r\n    localStorage.setItem(\"waterIntakeData\", JSON.stringify(storedData));\r\n\r\n    setSuccess(\"Water intake logged successfully!\");\r\n    setError(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Water Intake Tracker</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {success && <p style={{ color: \"green\" }}>{success}</p>}\r\n      <input\r\n        type=\"number\"\r\n        value={waterIntake}\r\n        onChange={(e) => setWaterIntake(e.target.value)}\r\n        placeholder=\"Enter water intake (ml)\"\r\n      />\r\n      <button onClick={handleAddIntake}>Add Intake</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddIntake;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAU,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEE,MAAMW,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACN,WAAW,EAAE;MAChBG,QAAQ,CAAC,qCAAqC,CAAC;MAC/C;IACF;IAEA,MAAMI,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC;IAC5E,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAEpD,IAAIR,UAAU,CAACS,IAAI,KAAKJ,KAAK,EAAE;MAC7BT,QAAQ,CAAC,sDAAsD,CAAC;MAChE;IACF;IAEAI,UAAU,GAAE;MAAES,IAAI,EAAEJ,KAAK;MAAEK,MAAM,EAAEjB;IAAY,CAAC;IAChDU,YAAY,CAACQ,OAAO,CAAC,iBAAiB,EAAEV,IAAI,CAACW,SAAS,CAACZ,UAAU,CAAC,CAAC;IAEnEF,UAAU,CAAC,mCAAmC,CAAC;IAC/CF,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEN,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5BtB,KAAK,iBAAIL,OAAA;MAAG4B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAElB;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChDpB,OAAO,iBAAIP,OAAA;MAAG4B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAN,QAAA,EAAEhB;IAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvD3B,OAAA;MACE8B,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAE5B,WAAY;MACnB6B,QAAQ,EAAGC,CAAC,IAAK7B,cAAc,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAChDI,WAAW,EAAC;IAAyB;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACF3B,OAAA;MAAQoC,OAAO,EAAE3B,eAAgB;MAAAc,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAACzB,EAAA,CAtDQD,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAsDjB;AAED,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}