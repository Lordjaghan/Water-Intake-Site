{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\water-intake\\\\src\\\\components\\\\files\\\\AddIntake.js\",\n  _s = $RefreshSig$();\n// IntakeForm.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddIntake() {\n  _s();\n  const [intake, setIntake] = useState('');\n  const [error, setError] = useState(null);\n  const user = JSON.parse(localStorage.getItem('loggedInUser'));\n  const handleSubmit = e => {\n    e.preventDefault();\n    const intakeData = JSON.parse(localStorage.getItem('intakeData')) || {};\n    const date = new Date().toISOString().split('T')[0];\n    if (intakeData[user.username] && intakeData[user.username][date]) {\n      setError('You have already logged your intake for today');\n    } else {\n      if (!intakeData[user.username]) {\n        intakeData[user.username] = {};\n      }\n      intakeData[user.username][date] = {\n        intake,\n        date,\n        time: new Date().toLocaleTimeString()\n      };\n      localStorage.setItem('intakeData', JSON.stringify(intakeData));\n      alert('Intake logged successfully');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: intake,\n      onChange: e => setIntake(e.target.value),\n      placeholder: \"Water intake (ml)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Log Intake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(AddIntake, \"eXZaikgsUCoegkVi8DK17ZfBZpg=\");\n_c = AddIntake;\n;\nexport default AddIntake;\nvar _c;\n$RefreshReg$(_c, \"AddIntake\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddIntake","_s","intake","setIntake","error","setError","user","JSON","parse","localStorage","getItem","handleSubmit","e","preventDefault","intakeData","date","Date","toISOString","split","username","time","toLocaleTimeString","setItem","stringify","alert","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["D:/React/water-intake/src/components/files/AddIntake.js"],"sourcesContent":["// IntakeForm.js\r\nimport React, { useState } from 'react';\r\n\r\nfunction AddIntake() {\r\n  const [intake, setIntake] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const user = JSON.parse(localStorage.getItem('loggedInUser'));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const intakeData = JSON.parse(localStorage.getItem('intakeData')) || {};\r\n    const date = new Date().toISOString().split('T')[0];\r\n    if (intakeData[user.username] && intakeData[user.username][date]) {\r\n      setError('You have already logged your intake for today');\r\n    } else {\r\n      if (!intakeData[user.username]) {\r\n        intakeData[user.username] = {};\r\n      }\r\n      intakeData[user.username][date] = { intake, date, time: new Date().toLocaleTimeString() };\r\n      localStorage.setItem('intakeData', JSON.stringify(intakeData));\r\n      alert('Intake logged successfully');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"number\"\r\n        value={intake}\r\n        onChange={(e) => setIntake(e.target.value)}\r\n        placeholder=\"Water intake (ml)\"\r\n      />\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <button type=\"submit\">Log Intake</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddIntake;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMS,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;EAE7D,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,UAAU,GAAGP,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC;IACvE,MAAMK,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnD,IAAIJ,UAAU,CAACR,IAAI,CAACa,QAAQ,CAAC,IAAIL,UAAU,CAACR,IAAI,CAACa,QAAQ,CAAC,CAACJ,IAAI,CAAC,EAAE;MAChEV,QAAQ,CAAC,+CAA+C,CAAC;IAC3D,CAAC,MAAM;MACL,IAAI,CAACS,UAAU,CAACR,IAAI,CAACa,QAAQ,CAAC,EAAE;QAC9BL,UAAU,CAACR,IAAI,CAACa,QAAQ,CAAC,GAAG,CAAC,CAAC;MAChC;MACAL,UAAU,CAACR,IAAI,CAACa,QAAQ,CAAC,CAACJ,IAAI,CAAC,GAAG;QAAEb,MAAM;QAAEa,IAAI;QAAEK,IAAI,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACK,kBAAkB,CAAC;MAAE,CAAC;MACzFZ,YAAY,CAACa,OAAO,CAAC,YAAY,EAAEf,IAAI,CAACgB,SAAS,CAACT,UAAU,CAAC,CAAC;MAC9DU,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAED,oBACEzB,OAAA;IAAM0B,QAAQ,EAAEd,YAAa;IAAAe,QAAA,gBAC3B3B,OAAA;MACE4B,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAE1B,MAAO;MACd2B,QAAQ,EAAGjB,CAAC,IAAKT,SAAS,CAACS,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;MAC3CG,WAAW,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EACD/B,KAAK,iBAAIL,OAAA;MAAGqC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAX,QAAA,EAAEtB;IAAK;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDpC,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEX;AAAClC,EAAA,CAjCQD,SAAS;AAAAsC,EAAA,GAATtC,SAAS;AAiCjB;AAED,eAAeA,SAAS;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}