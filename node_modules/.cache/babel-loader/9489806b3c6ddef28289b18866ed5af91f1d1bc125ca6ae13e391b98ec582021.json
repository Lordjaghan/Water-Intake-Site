{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\water-intake\\\\src\\\\components\\\\files\\\\ListIntake.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Pagination from \"../pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListIntake() {\n  _s();\n  const [intakes, setIntakes] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [intakesPerPage] = useState(10); // Changed to 10 for better pagination\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"waterIntakeData\")) || [];\n    setIntakes(storedData);\n  }, []);\n  const handleDelete = id => {\n    const filteredIntakes = intakes.filter(intake => intake.id !== id);\n    localStorage.setItem(\"waterIntakeData\", JSON.stringify(filteredIntakes));\n    setIntakes(filteredIntakes);\n  };\n  const handleEdit = (id, newIntake) => {\n    const updatedIntakes = intakes.map(intake => {\n      if (intake.id === id) {\n        return {\n          ...intake,\n          intake: newIntake\n        };\n      }\n      return intake;\n    });\n    localStorage.setItem(\"waterIntakeData\", JSON.stringify(updatedIntakes));\n    setIntakes(updatedIntakes);\n  };\n  const indexOfLastIntake = currentPage * intakesPerPage;\n  const indexOfFirstIntake = indexOfLastIntake - intakesPerPage;\n  const currentIntakes = Array.isArray(intakes) ? intakes.slice(indexOfFirstIntake, indexOfLastIntake) : [];\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Water Intake List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Intake (ml)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentIntakes.map((intake, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [\" // Changed to intake.id for better key uniqueness\", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: intake.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: intake.intake\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(intake.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(intake.id, prompt(\"Enter new intake\")),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, intake.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      intakesPerPage: intakesPerPage,\n      totalIntakes: intakes.length,\n      paginate: paginate,\n      currentPage: currentPage // Added currentPage prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ListIntake, \"U/rXbfvv62Dk9E30CqVaW92qO/g=\");\n_c = ListIntake;\nexport default ListIntake;\nvar _c;\n$RefreshReg$(_c, \"ListIntake\");","map":{"version":3,"names":["React","useState","useEffect","Pagination","jsxDEV","_jsxDEV","ListIntake","_s","intakes","setIntakes","currentPage","setCurrentPage","intakesPerPage","storedData","JSON","parse","localStorage","getItem","handleDelete","id","filteredIntakes","filter","intake","setItem","stringify","handleEdit","newIntake","updatedIntakes","map","indexOfLastIntake","indexOfFirstIntake","currentIntakes","Array","isArray","slice","paginate","pageNumber","children","fileName","_jsxFileName","lineNumber","columnNumber","className","index","date","onClick","prompt","totalIntakes","length","_c","$RefreshReg$"],"sources":["D:/React/water-intake/src/components/files/ListIntake.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Pagination from \"../pagination\";\r\n\r\nfunction ListIntake() {\r\n  const [intakes, setIntakes] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [intakesPerPage] = useState(10); // Changed to 10 for better pagination\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"waterIntakeData\")) || [];\r\n    setIntakes(storedData);\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    const filteredIntakes = intakes.filter((intake) => intake.id !== id);\r\n    localStorage.setItem(\"waterIntakeData\", JSON.stringify(filteredIntakes));\r\n    setIntakes(filteredIntakes);\r\n  };\r\n\r\n  const handleEdit = (id, newIntake) => {\r\n    const updatedIntakes = intakes.map((intake) => {\r\n      if (intake.id === id) {\r\n        return { ...intake, intake: newIntake };\r\n      }\r\n      return intake;\r\n    });\r\n    localStorage.setItem(\"waterIntakeData\", JSON.stringify(updatedIntakes));\r\n    setIntakes(updatedIntakes);\r\n  };\r\n\r\n  const indexOfLastIntake = currentPage * intakesPerPage;\r\n  const indexOfFirstIntake = indexOfLastIntake - intakesPerPage;\r\n  const currentIntakes = Array.isArray(intakes) ? intakes.slice(indexOfFirstIntake, indexOfLastIntake) : [];\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Water Intake List</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Intake (ml)</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentIntakes.map((intake, index) => (\r\n            <tr key={intake.id}> // Changed to intake.id for better key uniqueness\r\n              <td>{intake.date}</td>\r\n              <td>{intake.intake}</td>\r\n              <td>\r\n                <button onClick={() => handleDelete(intake.id)}>Delete</button>\r\n                <button onClick={() => handleEdit(intake.id, prompt(\"Enter new intake\"))}>Edit</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <Pagination\r\n        intakesPerPage={intakesPerPage}\r\n        totalIntakes={intakes.length}\r\n        paginate={paginate}\r\n        currentPage={currentPage} // Added currentPage prop\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListIntake;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}