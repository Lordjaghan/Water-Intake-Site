{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\water-intake\\\\src\\\\components\\\\files\\\\ListIntake.js\",\n  _s = $RefreshSig$();\n// IntakeList.js\nimport React, { useState, useEffect } from 'react';\n\n/**\r\n * Component to display a paginated list of intake data.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListIntake() {\n  _s();\n  const [intakeData, setIntakeData] = useState({});\n  const [pageNumber, setPageNumber] = useState(0);\n  const [editMode, setEditMode] = useState(false);\n  const [selectedDate, setSelectedDate] = useState('');\n  const user = JSON.parse(localStorage.getItem('loggedInUser'));\n  useEffect(() => {\n    const storedData = localStorage.getItem('intakeData');\n    if (storedData) {\n      const data = JSON.parse(storedData);\n      if (data[user.username]) {\n        setIntakeData(data[user.username]);\n      }\n    }\n  }, [user.username]);\n  const pages = Math.ceil(Object.keys(intakeData).length / 10);\n  const startIndex = pageNumber * 10;\n  const endIndex = startIndex + 10;\n  const paginatedData = Object.keys(intakeData).slice(startIndex, endIndex).map(date => intakeData[date]);\n\n  /**\r\n   * Handle edit button click.\r\n   * @param {string} date - Date of the intake data to edit.\r\n   */\n  const handleEdit = date => {\n    setEditMode(true);\n    setSelectedDate(date);\n  };\n\n  /**\r\n   * Handle delete button click.\r\n   * @param {string} date - Date of the intake data to delete.\r\n   */\n  const handleDelete = date => {\n    const storedData = localStorage.getItem('intakeData');\n    if (storedData) {\n      const data = JSON.parse(storedData);\n      if (data[user.username] && data[user.username][date]) {\n        delete data[user.username][date];\n        localStorage.setItem('intakeData', JSON.stringify(data));\n        setIntakeData(data[user.username]);\n        alert('Intake deleted successfully');\n      } else {\n        alert('No intake data found for the selected date');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Intake List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Intake (ml)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: paginatedData.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.intake\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(data.date),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(data.date),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, data.date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [pageNumber > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPageNumber(pageNumber - 1),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), pageNumber < pages - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPageNumber(pageNumber + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ListIntake, \"FYvfdpMnijQYIcqpbrY0MvCloH0=\");\n_c = ListIntake;\n;\nexport default ListIntake;\nvar _c;\n$RefreshReg$(_c, \"ListIntake\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ListIntake","_s","intakeData","setIntakeData","pageNumber","setPageNumber","editMode","setEditMode","selectedDate","setSelectedDate","user","JSON","parse","localStorage","getItem","storedData","data","username","pages","Math","ceil","Object","keys","length","startIndex","endIndex","paginatedData","slice","map","date","handleEdit","handleDelete","setItem","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","intake","time","onClick","_c","$RefreshReg$"],"sources":["D:/React/water-intake/src/components/files/ListIntake.js"],"sourcesContent":["// IntakeList.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n/**\r\n * Component to display a paginated list of intake data.\r\n */\r\nfunction ListIntake() {\r\n  const [intakeData, setIntakeData] = useState({});\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const user = JSON.parse(localStorage.getItem('loggedInUser'));\r\n\r\n  useEffect(() => {\r\n    const storedData = localStorage.getItem('intakeData');\r\n    if (storedData) {\r\n      const data = JSON.parse(storedData);\r\n      if (data[user.username]) {\r\n        setIntakeData(data[user.username]);\r\n      }\r\n    }\r\n  }, [user.username]);\r\n\r\n  const pages = Math.ceil(Object.keys(intakeData).length / 10);\r\n  const startIndex = pageNumber * 10;\r\n  const endIndex = startIndex + 10;\r\n  const paginatedData = Object.keys(intakeData)\r\n    .slice(startIndex, endIndex)\r\n    .map((date) => intakeData[date]);\r\n\r\n  /**\r\n   * Handle edit button click.\r\n   * @param {string} date - Date of the intake data to edit.\r\n   */\r\n  const handleEdit = (date) => {\r\n    setEditMode(true);\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  /**\r\n   * Handle delete button click.\r\n   * @param {string} date - Date of the intake data to delete.\r\n   */\r\n  const handleDelete = (date) => {\r\n    const storedData = localStorage.getItem('intakeData');\r\n    if (storedData) {\r\n      const data = JSON.parse(storedData);\r\n      if (data[user.username] && data[user.username][date]) {\r\n        delete data[user.username][date];\r\n        localStorage.setItem('intakeData', JSON.stringify(data));\r\n        setIntakeData(data[user.username]);\r\n        alert('Intake deleted successfully');\r\n      } else {\r\n        alert('No intake data found for the selected date');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Intake List</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Intake (ml)</th>\r\n            <th>Time</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {paginatedData.map((data) => (\r\n            <tr key={data.date}>\r\n              <td>{data.date}</td>\r\n              <td>{data.intake}</td>\r\n              <td>{data.time}</td>\r\n              <td>\r\n                <button onClick={() => handleEdit(data.date)}>Edit</button>\r\n                <button onClick={() => handleDelete(data.date)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        {pageNumber > 0 && (\r\n          <button onClick={() => setPageNumber(pageNumber - 1)}>Previous</button>\r\n        )}\r\n        {pageNumber < pages - 1 && (\r\n          <button onClick={() => setPageNumber(pageNumber + 1)}>Next</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListIntake;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}